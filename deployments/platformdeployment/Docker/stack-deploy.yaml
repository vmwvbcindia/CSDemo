# use this with `docker stack deploy --compose-file stack-deploy.yaml yelb` against a Docker (Swarm mode) cluster  
version: "3"
services:
  yelb-ui:
    image: mreferre/yelb-ui:0.3
    depends_on:
      - yelb-appserver
    ports:
      - 80:80
    networks:
      - yelb-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  yelb-appserver:
    image: mreferre/yelb-appserver:0.3
    depends_on:
      - redis-server
      - yelb-db
    networks:
      - yelb-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  redis-server:
    image: redis:4.0.2
    networks:
      - yelb-network
    # uncomment the following lines if you want to persist redis data across deployments
    #volumes:
    #  - redisdata:/data
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  yelb-db:
    image: mreferre/yelb-db:0.3
    networks:
      - yelb-network
    # uncomment the following lines if you want to persist postgres data across deployments
    #volumes:
    #  - postgresqldata:/var/lib/postgresql/data
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

networks:
  yelb-network:
    driver: overlay # a user defined bridge is required; the default bridge network doesn't support name resolution

# uncomment the following lines if you want to persist redis/postgres data across deployments
#volumes:
#   redisdata:
#      driver: local # you can pick another driver depending on the platform you are deploying onto   
#   postgresqldata:
#      driver: local # you can pick another driver depending on the platform you are deploying onto

